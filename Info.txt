# dashboard is now ready
# backend Post api done and get also but both images cant not upload at the same time . i will resolve it
# User api
# Post api And Get Api
http://localhost:3000/api/User
# Delete and Update Api
http://localhost:3000/api/User/66f137ec0d4f234b6ce83816
# working in Signature api only model is created


# result after date change
let result = 12 + 32; // Initial sum
console.log(`Initial result: ${result}`);

let currentDate = new Date().getDate(); // Get the current day

const intervalId = setInterval(() => {
    const newDate = new Date().getDate(); // Get the new current day
    
    // Check if the date has changed (new day)
    if (newDate !== currentDate) {
        result += 12; // Add 12 to the result when the day changes
        currentDate = newDate; // Update currentDate to the new day
        console.log(`Updated result on new day: ${result}`);
    }
}, 60000); // Check every 1 minute (60000 milliseconds)

#result after month change
let result = 12 + 32; // Initial sum
console.log(`Initial result: ${result}`);

let currentMonth = new Date().getMonth(); // Get the current month (0-11)

const intervalId = setInterval(() => {
    const newMonth = new Date().getMonth(); // Get the new current month
    
    // Check if the month has changed (new month)
    if (newMonth !== currentMonth) {
        result += 12; // Add 12 to the result when the month changes
        currentMonth = newMonth; // Update currentMonth to the new month
        console.log(`Updated result on new month: ${result}`);
    }
}, 60000); // Check every 1 minute (60000 milliseconds)

# result after quarter change
let result = 12 + 32; // Initial sum
console.log(`Initial result: ${result}`);

// Function to determine the current quarter (1 to 4)
const getCurrentQuarter = () => {
    const month = new Date().getMonth(); // Get the current month (0-11)
    return Math.floor(month / 3) + 1; // Calculate the quarter
};

let currentQuarter = getCurrentQuarter(); // Get the current quarter

const intervalId = setInterval(() => {
    const newQuarter = getCurrentQuarter(); // Get the new current quarter
    
    // Check if the quarter has changed (new quarter)
    if (newQuarter !== currentQuarter) {
        result += 12; // Add 12 to the result when the quarter changes
        currentQuarter = newQuarter; // Update currentQuarter to the new quarter
        console.log(`Updated result on new quarter: ${result}`);
    }
}, 60000); // Check every 1 minute (60000 milliseconds)

# result after year change
let result = 12 + 32; // Initial sum
console.log(`Initial result: ${result}`);

// Get the current year
let currentYear = new Date().getFullYear(); 

const intervalId = setInterval(() => {
    const newYear = new Date().getFullYear(); // Get the new current year
    
    // Check if the year has changed (new year)
    if (newYear !== currentYear) {
        result += 12; // Add 12 to the result when the year changes
        currentYear = newYear; // Update currentYear to the new year
        console.log(`Updated result on new year: ${result}`);
    }
}, 60000); // Check every 1 minute (60000 milliseconds)

# date change to mm/dd/yyyy formate
// Given date string in ISO format
const startDate = "2024-10-03T00:00:00.000Z";

// Create a new Date object from the ISO string
const dateObject = new Date(startDate);

// Format the date to mm/dd/yyyy
const formattedDate = `${(dateObject.getMonth() + 1).toString().padStart(2, '0')}/${dateObject.getDate().toString().padStart(2, '0')}/${dateObject.getFullYear()}`;

console.log(`Formatted date: ${formattedDate}`);

#
  // Calculation function
  async function calculation(startDateInput, initialValueInput) {
    // Create a new Date object from the ISO string
    const dateObject = new Date(startDateInput);

    // Format the date to mm/dd/yyyy (optional, since we don't need this for calculations)
    const formattedDate = `${(dateObject.getMonth() + 1)
      .toString()
      .padStart(2, "0")}/${dateObject
      .getDate()
      .toString()
      .padStart(2, "0")}/${dateObject.getFullYear()}`;

    // Evaluate the initial sum
    // console.log("value is: ", initialValueInput);
    let result = eval(initialValueInput); // Initial sum (use cautiously)
    console.log(`Initial result: ${result}`);

    // Set the starting date
    let startDate = new Date(formattedDate); // Use the original date input
    let currentDate = startDate.getTime(); // Use getTime() to compare full date

    const intervalId = setInterval(() => {
      const newDate = new Date(); // Get the new current date

      // Check if the date has changed (new day)
      if (newDate.getTime() !== currentDate) {
        result += 12; // Add 12 to the result when the day changes
        currentDate = newDate.getTime(); // Update currentDate to the new date
        console.log(`Updated result on new day: ${result}`);
      }
    }, 60000); // Check every 1 minute (60000 milliseconds)
  }

# code with update api 
 async function drivercal(date, pay, value, userId, formData) {
    try {
      // Convert 'pay' to a number
      const result = Number(pay);
      // Convert 'date' to a Date object
      const passingDate = new Date(date);

      // Get the current date
      const currentDate = new Date();

      // Function to calculate the final result based on time difference
      const calculateFinalResult = (timePassed) => {
        return result * (timePassed + 1);
      };

      let timePassed;
      value = value.toLowerCase();
      switch (value) {
        case "perday":
          // Calculate the difference in time between currentDate and passingDate in milliseconds
          const timeDiffDays = currentDate - passingDate;
          // Convert the difference from milliseconds to days
          timePassed = Math.floor(timeDiffDays / (1000 * 60 * 60 * 24));
          break;

        case "permonth":
          // Calculate the difference in months
          timePassed =
            (currentDate.getFullYear() - passingDate.getFullYear()) * 12 +
            (currentDate.getMonth() - passingDate.getMonth());
          break;

        case "perquarter":
          // Calculate the difference in months and convert to quarters
          timePassed =
            (currentDate.getFullYear() - passingDate.getFullYear()) * 12 +
            (currentDate.getMonth() - passingDate.getMonth());
          timePassed = Math.floor(timePassed / 3);
          break;

        case "peryear":
          // Calculate the difference in years
          timePassed = currentDate.getFullYear() - passingDate.getFullYear();
          // Adjust if the current date is before the anniversary of passingDate
          if (
            currentDate.getMonth() < passingDate.getMonth() ||
            (currentDate.getMonth() === passingDate.getMonth() &&
              currentDate.getDate() < passingDate.getDate())
          ) {
            timePassed--;
          }
          break;

        default:
          return "Invalid value type provided.";
      }

      // Ensure timePassed is not negative
      timePassed = Math.max(0, timePassed);

      // Calculate the final result
      const finalResult = calculateFinalResult(timePassed);

      // Prepare form data to send
      const formDataToSend = new FormData();
      const specificFieldKey = "calculation"; // The field you want to update

      // Set the specific field you want to update
      formDataToSend.set(specificFieldKey, finalResult);

      // Append other fields from the existing formData if it exists
      if (formData) {
        Object.keys(formData).forEach((key) => {
          if (key !== specificFieldKey) {
            formDataToSend.append(key, formData[key]);
          }
        });
      }

      // Sending the PUT request
      const response = await axios.put(
        `${API_URL_Drivercalculation}/${userId}`,
        formDataToSend,
        {
          headers: {
            "Content-Type": "multipart/form-data", // Set the appropriate headers for form data
          },
        }
      );

      console.log("Update specific field successful:", response.data);
      return finalResult; // Return finalResult after the request completes
    } catch (error) {
      console.error("Failed to update driver:", error);
      // You can show a toast notification or perform other error handling
      throw error; // Rethrow the error if needed
    }
  }


  #
    // function drivercal(date, pay, value) {
  //   // Convert 'pay' to a number
  //   const result = Number(pay);
  //   // Convert 'date' to a Date object
  //   const passingDate = new Date(date);

  //   // Get the current date and subtract one day
  //   const currentDate = new Date();
  //   currentDate.setDate(currentDate.getDate() - 1); // Subtract one day

  //   // Function to calculate the final result based on time difference
  //   const calculateFinalResult = (timePassed) => {
  //     return result * (timePassed + 1);
  //   };

  //   let timePassed;
  //   value = value.toLowerCase();
  //   switch (value) {
  //     case "perday":
  //       // Calculate the difference in time between currentDate and passingDate in milliseconds
  //       const timeDiff = currentDate - passingDate;
  //       // Convert the difference from milliseconds to days
  //       timePassed = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
  //       break;

  //     case "permonth":
  //       // Calculate the difference in months between currentDate and passingDate
  //       timePassed =
  //         (currentDate.getFullYear() - passingDate.getFullYear()) * 12 +
  //         (currentDate.getMonth() - passingDate.getMonth());
  //       break;

  //     case "perquarter":
  //       // Calculate the difference in months
  //       timePassed =
  //         (currentDate.getFullYear() - passingDate.getFullYear()) * 12 +
  //         (currentDate.getMonth() - passingDate.getMonth());
  //       // Calculate the number of quarters passed (1 quarter = 3 months)
  //       timePassed = Math.floor(timePassed / 3);
  //       break;

  //     case "peryear":
  //       // Calculate the difference in years between currentDate and passingDate
  //       timePassed = currentDate.getFullYear() - passingDate.getFullYear();
  //       // If the current date is before the anniversary of passingDate in the current year, subtract 1
  //       if (
  //         currentDate.getMonth() < passingDate.getMonth() ||
  //         (currentDate.getMonth() === passingDate.getMonth() &&
  //           currentDate.getDate() < passingDate.getDate())
  //       ) {
  //         timePassed--;
  //       }
  //       break;
   // case "perminute":
        //   // Calculate the difference in milliseconds
        //   const timeDifferenceInMillis = currentDate - passingDate;

        //   // Convert milliseconds to minutes
        //   timePassed = Math.floor(timeDifferenceInMillis / 1000 / 60);
        //   break;

  //     default:
  //       return "Invalid value type provided.";
  //   }

  //   // Calculate the final result
  //   const finalResult = calculateFinalResult(timePassed);

  //   // Return the final result or pay if finalResult is 0
  //   return finalResult;
  // }


  # 
  when super admin add title  show every where  
  Desciption remove required  
  and company remove required



//



{superadmin === "superadmin" &&
            flag &&
            Iscompanyselected === "Yes" ? (
              <>
                {/* allcompanies list */}
                <Link passHref href="/Dashboard/Company/GetAllCompanies">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Company/GetAllCompanies")
                    }
                    className={`${
                      activeLink === "/Dashboard/Company/GetAllCompanies"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <FaHouseLaptop
                        className={`${
                          activeLink === "/Dashboard/Company/GetAllCompanies"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                        style={{
                          backgroundColor: "transparent",
                        }}
                      />
                      <span
                        className="hidden sm:block text-sm"
                        style={{
                          backgroundColor: "transparent",
                        }}
                      >
                        Registered Companies
                      </span>
                    </div>
                  </li>
                </Link>
                {/* only for superadmin */}
                <Link passHref href="/Dashboard/Superadmin">
                  <li
                    onClick={() => handleLinkClick("/Dashboard/Superadmin")}
                    className={`${
                      activeLink === "/Dashboard/Superadmin"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <FaIndustry
                        className={`${
                          activeLink === "/Dashboard/Superadmin"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span
                        className="hidden sm:block text-sm"
                        style={{
                          backgroundColor: "transparent",
                        }}
                      >
                        All Companyies
                      </span>
                    </div>
                  </li>
                </Link>

                <Link passHref href="/Dashboard/Title/GetAllTitles">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Title/GetAllTitles")
                    }
                    className={`${
                      activeLink === "/Dashboard/Title/GetAllTitles"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <GrSystem
                        className={`${
                          activeLink === "/Dashboard/Title/GetAllTitles"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">System</span>
                    </div>
                  </li>
                </Link>

                <Link passHref href={"/Dashboard/Users/GetAllusers"}>
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Users/GetAllusers")
                    }
                    className={`${
                      activeLink === "/Dashboard/Users/GetAllusers"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <RiOrganizationChart
                        className={`${
                          activeLink === "/Dashboard/Users/GetAllusers"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">
                        Superadmin Users
                      </span>
                    </div>
                  </li>
                </Link>

                <Link passHref href="/Dashboard/Driver/GetAllDrivers">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Driver/GetAllDrivers")
                    }
                    className={`${
                      activeLink === "/Dashboard/Driver/GetAllDrivers"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <IoPersonAdd
                        className={`${
                          activeLink === "/Dashboard/Driver/GetAllDrivers"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm ">Driver</span>
                    </div>
                  </li>
                </Link>

                <Link passHref href="/Dashboard/Vehicle/GetAllVehicle">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Vehicle/GetAllVehicle")
                    }
                    className={`${
                      activeLink === "/Dashboard/Vehicle/GetAllVehicle"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <FaCar
                        className={`${
                          activeLink === "/Dashboard/Vehicle/GetAllVehicle"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">Vehicle</span>
                    </div>
                  </li>
                </Link>

                <div>
                  <li
                    onMouseEnter={() => setIsOpenManagement(true)}
                    onMouseLeave={() => setIsOpenManagement(false)}
                    className={`${
                      isOpenManagement === true
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg relative`}
                  >
                    <div className="flex items-center gap-3 relative">
                      <FaCar
                        className={`${
                          isOpenManagement === true
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <MdManageSearch
                        className={`${
                          isOpenManagement === true
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">
                        Vehicle Management
                      </span>

                      {isOpenManagement && (
                        <div className="absolute left-36 mt-2 w-full sm:w-[170px] hover:bg-gray-200   border border-gray-300 rounded-md shadow-lg ">
                          <ul className=" space-y-1 p-3">
                            <li>
                              <Link
                                href="/Dashboard/Models/Manufacturer/GetManufacturers"
                                className="rounded hover:bg-gray-200"
                              >
                                All Manufacturers
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/VehicleType/GetVehicleTypes"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Vehicle Types
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Enquiry/GetEnquiries"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Enquiries
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Firm/GetFirms"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Firms
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Signature/GetSignatures"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Signatures
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/LocalAuthority/GetLocalAuthority"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Local Authority
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Supplier/GetSuppliers"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Suppliers
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Employee/GetEmploies"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Employees
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Badge/GetBadges"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Badges
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Insurance/GetInsurances"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Insurances
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Type_BodyStyle/GetTypes"
                                className="  rounded hover:bg-gray-200"
                              >
                                Type / Body Style
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/FuelType/GetFuelTypes"
                                className="  rounded hover:bg-gray-200"
                              >
                                Fuel Type
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Transmission/GetTransmissions"
                                className="  rounded hover:bg-gray-200"
                              >
                                Transmission
                              </Link>
                            </li>

                            {/* <li>
                              <Link
                                href="/Dashboard/Models/Payment/GetPayments"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Payments
                              </Link>
                            </li> */}
                          </ul>
                        </div>
                      )}
                    </div>
                  </li>
                </div>

                <div className="relative inline-block text-sm">
                  <span className="items-center cursor-pointer hover:bg-gray-100 rounded-lg hidden sm:block ml-2">
                    Reports
                  </span>
                  {isOpen && (
                    <div className="absolute left-36 -mt-12 w-auto bg-white border border-gray-300 rounded-md shadow-lg z-50">
                      <ul className="grid grid-row-3 w-[200px] bg-red-500">
                        <li
                          className="relative hover:bg-gray-100 cursor-pointer"
                          onMouseEnter={() => handleMouseEnter("systemReports")}
                          onMouseLeave={handleMouseLeave}
                        >
                          <Link
                            href="#"
                            className="block px-4 py-2 text-gray-800"
                          >
                            System Reports
                          </Link>
                          {openDropdown === "systemReports" && (
                            <ul className="absolute left-32 w-[200px] bg-white  rounded-md shadow-lg space-y-4 z-50">
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3  rounded hover:bg-gray-200"
                                >
                                  Employee Update Reports
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Rental Invoice Reports
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Overdue Payment Reports
                                </Link>
                              </li>
                            </ul>
                          )}
                        </li>
                        <li
                          className="relative hover:bg-gray-100 cursor-pointer"
                          onMouseEnter={() =>
                            handleMouseEnter("vehicleReports")
                          }
                          onMouseLeave={handleMouseLeave}
                        >
                          <Link
                            href="#"
                            className="block px-4 py-2 text-gray-800"
                          >
                            Vehicle Reports
                          </Link>
                          {openDropdown === "vehicleReports" && (
                            <ul className="absolute left-32 -mt-5 w-[160px] bg-white rounded-md shadow-lg space-y-4  z-50">
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Interim Test Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Mot Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Road Tax Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-2 rounded hover:bg-gray-200"
                                >
                                  Test Date Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-2 rounded hover:bg-gray-200"
                                >
                                  Plate Expiry
                                </Link>
                              </li>
                            </ul>
                          )}
                        </li>

                        <li
                          className="relative hover:bg-gray-100 cursor-pointer"
                          onMouseEnter={() => handleMouseEnter("driverReports")}
                          onMouseLeave={handleMouseLeave}
                        >
                          <Link
                            href="#"
                            className="block px-4 py-2 text-gray-800"
                          >
                            Driver Reports
                          </Link>

                          {openDropdown === "driverReports" && (
                            <ul className="absolute left-32 -mt-5 w-[160px] bg-white rounded-md shadow-lg space-y-4 z-50">
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Drivers Holidays
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Licence Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Taxi Badge Expiry
                                </Link>
                              </li>
                            </ul>
                          )}
                        </li>
                      </ul>
                    </div>
                  )}
                </div>

                <Link passHref href="#">
                  <li className="flex items-center p-3 cursor-pointer  rounded-lg">
                    <div className="flex items-center gap-3">
                      <MdFavorite className="text-black text-sm" />
                      <span className="hidden sm:block">Favourites</span>
                    </div>
                  </li>
                </Link>
              </>
            ) : superadmin === "superadmin" &&
              !flag &&
              Iscompanyselected === "No" ? (
              <>
                {/* allcompanies list */}
                <Link passHref href="/Dashboard/Company/GetAllCompanies">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Company/GetAllCompanies")
                    }
                    className={`${
                      activeLink === "/Dashboard/Company/GetAllCompanies"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <FaHouseLaptop
                        className={`${
                          activeLink === "/Dashboard/Company/GetAllCompanies"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                        style={{
                          backgroundColor: "transparent",
                        }}
                      />
                      <span
                        className="hidden sm:block text-sm"
                        style={{
                          backgroundColor: "transparent",
                        }}
                      >
                        Registered Companies
                      </span>
                    </div>
                  </li>
                </Link>
                {/* only for superadmin */}
                <Link passHref href="/Dashboard/Superadmin">
                  <li
                    onClick={() => handleLinkClick("/Dashboard/Superadmin")}
                    className={`${
                      activeLink === "/Dashboard/Superadmin"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <FaIndustry
                        className={`${
                          activeLink === "/Dashboard/Superadmin"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span
                        className="hidden sm:block text-sm"
                        style={{
                          backgroundColor: "transparent",
                        }}
                      >
                        All Companyies
                      </span>
                    </div>
                  </li>
                </Link>

                <Link passHref href="/Dashboard/Title/GetAllTitles">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Title/GetAllTitles")
                    }
                    className={`${
                      activeLink === "/Dashboard/Title/GetAllTitles"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <GrSystem
                        className={`${
                          activeLink === "/Dashboard/Title/GetAllTitles"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">System</span>
                    </div>
                  </li>
                </Link>

                <Link passHref href={"/Dashboard/Users/GetAllusers"}>
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Users/GetAllusers")
                    }
                    className={`${
                      activeLink === "/Dashboard/Users/GetAllusers"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <RiOrganizationChart
                        className={`${
                          activeLink === "/Dashboard/Users/GetAllusers"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">
                        Superadmin Users
                      </span>
                    </div>
                  </li>
                </Link>

                {/* <Link passHref href="/Dashboard/Driver/GetAllDrivers">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Driver/GetAllDrivers")
                    }
                    className={`${
                      activeLink === "/Dashboard/Driver/GetAllDrivers"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <IoPersonAdd
                        className={`${
                          activeLink === "/Dashboard/Driver/GetAllDrivers"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm ">Driver</span>
                    </div>
                  </li>
                </Link>

                <Link passHref href="/Dashboard/Vehicle/GetAllVehicle">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Vehicle/GetAllVehicle")
                    }
                    className={`${
                      activeLink === "/Dashboard/Vehicle/GetAllVehicle"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <FaCar
                        className={`${
                          activeLink === "/Dashboard/Vehicle/GetAllVehicle"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">Vehicle</span>
                    </div>
                  </li>
                </Link> */}

                <div>
                  <li
                    onMouseEnter={() => setIsOpenManagement(true)}
                    onMouseLeave={() => setIsOpenManagement(false)}
                    className={`${
                      isOpenManagement === true
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg relative`}
                  >
                    <div className="flex items-center gap-3 relative">
                      <FaCar
                        className={`${
                          isOpenManagement === true
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <MdManageSearch
                        className={`${
                          isOpenManagement === true
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">
                        Vehicle Management
                      </span>

                      {isOpenManagement && (
                        <div className="absolute left-36 mt-2 w-full sm:w-[170px] hover:bg-gray-200   border border-gray-300 rounded-md shadow-lg ">
                          <ul className=" space-y-1 p-3">
                            <li>
                              <Link
                                href="/Dashboard/Models/Manufacturer/GetManufacturers"
                                className="rounded hover:bg-gray-200"
                              >
                                All Manufacturers
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/VehicleType/GetVehicleTypes"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Vehicle Types
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Enquiry/GetEnquiries"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Enquiries
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Firm/GetFirms"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Firms
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Signature/GetSignatures"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Signatures
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/LocalAuthority/GetLocalAuthority"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Local Authority
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Supplier/GetSuppliers"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Suppliers
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Employee/GetEmploies"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Employees
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Badge/GetBadges"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Badges
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Insurance/GetInsurances"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Insurances
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Type_BodyStyle/GetTypes"
                                className="  rounded hover:bg-gray-200"
                              >
                                Type / Body Style
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/FuelType/GetFuelTypes"
                                className="  rounded hover:bg-gray-200"
                              >
                                Fuel Type
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Transmission/GetTransmissions"
                                className="  rounded hover:bg-gray-200"
                              >
                                Transmission
                              </Link>
                            </li>

                            {/* <li>
                              <Link
                                href="/Dashboard/Models/Payment/GetPayments"
                                className="  rounded hover:bg-gray-200"
                              >
                                All Payments
                              </Link>
                            </li> */}
                          </ul>
                        </div>
                      )}
                    </div>
                  </li>
                </div>

                <div className="relative inline-block text-sm">
                  <span className="items-center cursor-pointer hover:bg-gray-100 rounded-lg hidden sm:block ml-2">
                    Reports
                  </span>
                  {isOpen && (
                    <div className="absolute left-36 -mt-12 w-auto bg-white border border-gray-300 rounded-md shadow-lg z-50">
                      <ul className="grid grid-row-3 w-[200px] bg-red-500">
                        <li
                          className="relative hover:bg-gray-100 cursor-pointer"
                          onMouseEnter={() => handleMouseEnter("systemReports")}
                          onMouseLeave={handleMouseLeave}
                        >
                          <Link
                            href="#"
                            className="block px-4 py-2 text-gray-800"
                          >
                            System Reports
                          </Link>
                          {openDropdown === "systemReports" && (
                            <ul className="absolute left-32 w-[200px] bg-white  rounded-md shadow-lg space-y-4 z-50">
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3  rounded hover:bg-gray-200"
                                >
                                  Employee Update Reports
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Rental Invoice Reports
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Overdue Payment Reports
                                </Link>
                              </li>
                            </ul>
                          )}
                        </li>
                        <li
                          className="relative hover:bg-gray-100 cursor-pointer"
                          onMouseEnter={() =>
                            handleMouseEnter("vehicleReports")
                          }
                          onMouseLeave={handleMouseLeave}
                        >
                          <Link
                            href="#"
                            className="block px-4 py-2 text-gray-800"
                          >
                            Vehicle Reports
                          </Link>
                          {openDropdown === "vehicleReports" && (
                            <ul className="absolute left-32 -mt-5 w-[160px] bg-white rounded-md shadow-lg space-y-4  z-50">
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Interim Test Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Mot Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Road Tax Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-2 rounded hover:bg-gray-200"
                                >
                                  Test Date Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-2 rounded hover:bg-gray-200"
                                >
                                  Plate Expiry
                                </Link>
                              </li>
                            </ul>
                          )}
                        </li>

                        <li
                          className="relative hover:bg-gray-100 cursor-pointer"
                          onMouseEnter={() => handleMouseEnter("driverReports")}
                          onMouseLeave={handleMouseLeave}
                        >
                          <Link
                            href="#"
                            className="block px-4 py-2 text-gray-800"
                          >
                            Driver Reports
                          </Link>

                          {openDropdown === "driverReports" && (
                            <ul className="absolute left-32 -mt-5 w-[160px] bg-white rounded-md shadow-lg space-y-4 z-50">
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Drivers Holidays
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Licence Expiry
                                </Link>
                              </li>
                              <li>
                                <Link
                                  href="#"
                                  className="px-4 py-3 rounded hover:bg-gray-200"
                                >
                                  Taxi Badge Expiry
                                </Link>
                              </li>
                            </ul>
                          )}
                        </li>
                      </ul>
                    </div>
                  )}
                </div>

                <Link passHref href="#">
                  <li className="flex items-center p-3 cursor-pointer  rounded-lg">
                    <div className="flex items-center gap-3">
                      <MdFavorite className="text-black text-sm" />
                      <span className="hidden sm:block">Favourites</span>
                    </div>
                  </li>
                </Link>
              </>
            ) : (
              <>
                {" "}
                <Link passHref href="/Dashboard/Title/GetAllTitles">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Title/GetAllTitles")
                    }
                    className={`${
                      activeLink === "/Dashboard/Title/GetAllTitles"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <GrSystem
                        className={`${
                          activeLink === "/Dashboard/Title/GetAllTitles"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">System</span>
                    </div>
                  </li>
                </Link>
                <Link passHref href={"/Dashboard/Users/GetAllusers"}>
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Users/GetAllusers")
                    }
                    className={`${
                      activeLink === "/Dashboard/Users/GetAllusers"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <RiOrganizationChart
                        className={`${
                          activeLink === "/Dashboard/Users/GetAllusers"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">
                        Organization
                      </span>
                    </div>
                  </li>
                </Link>
                <Link passHref href="/Dashboard/Driver/GetAllDrivers">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Driver/GetAllDrivers")
                    }
                    className={`${
                      activeLink === "/Dashboard/Driver/GetAllDrivers"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <IoPersonAdd
                        className={`${
                          activeLink === "/Dashboard/Driver/GetAllDrivers"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm ">Driver</span>
                    </div>
                  </li>
                </Link>
                <Link passHref href="/Dashboard/Vehicle/GetAllVehicle">
                  <li
                    onClick={() =>
                      handleLinkClick("/Dashboard/Vehicle/GetAllVehicle")
                    }
                    className={`${
                      activeLink === "/Dashboard/Vehicle/GetAllVehicle"
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <div className="flex items-center gap-3">
                      <FaCar
                        className={`${
                          activeLink === "/Dashboard/Vehicle/GetAllVehicle"
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">Vehicle</span>
                    </div>
                  </li>
                </Link>
                <div>
                  <li
                    onMouseEnter={() => setIsOpenManagement(true)}
                    onMouseLeave={() => setIsOpenManagement(false)}
                    className={`${
                      isOpenManagement === true
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg relative`}
                  >
                    <div className="flex items-center gap-3 relative">
                      <FaCar
                        className={`${
                          isOpenManagement === true
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <MdManageSearch
                        className={`${
                          isOpenManagement === true
                            ? "text-red-400"
                            : "text-black text-sm"
                        }`}
                      />
                      <span className="hidden sm:block text-sm">
                        Vehicle Management
                      </span>

                      {isOpenManagement && (
                        <div className="absolute left-36 mt-2 w-full sm:w-[170px] hover:bg-gray-200   border border-gray-300 rounded-md shadow-lg">
                          <ul className="grid grid-cols-1 space-y-1 p-3">
                            <li>
                              <Link
                                href="/Dashboard/Models/Manufacturer/GetManufacturers"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Manufacturers
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/VehicleType/GetVehicleTypes"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Vehicle Types
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Enquiry/GetEnquiries"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Enquiries
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Firm/GetFirms"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Firms
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Signature/GetSignatures"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Signatures
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/LocalAuthority/GetLocalAuthority"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Local Authority
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Supplier/GetSuppliers"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Suppliers
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Employee/GetEmploies"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Employees
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Badge/GetBadges"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Badges
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Insurance/GetInsurances"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Insurances
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Type_BodyStyle/GetTypes"
                                className="  rounded hover:bg-gray-200"
                              >
                                Type / Body Style
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/FuelType/GetFuelTypes"
                                className="  rounded hover:bg-gray-200"
                              >
                                Fuel Type
                              </Link>
                            </li>
                            <li>
                              <Link
                                href="/Dashboard/Models/Transmission/GetTransmissions"
                                className="  rounded hover:bg-gray-200"
                              >
                                Transmission
                              </Link>
                            </li>
                            {/* <li>
                              <Link
                                href="/Dashboard/Models/Payment/GetPayments"
                                className=" py-2 rounded hover:bg-gray-200"
                              >
                                All Payments
                              </Link>
                            </li> */}
                          </ul>
                        </div>
                      )}
                    </div>
                  </li>
                </div>
                <div className="">
                  <li
                    onMouseEnter={() => setIsOpen(true)}
                    onMouseLeave={() => setIsOpen(false)}
                    className={`${
                      isOpen === true
                        ? "border-l-4 border-red-400"
                        : "bg-white text-blue"
                    } flex items-center p-3 cursor-pointer hover:bg-gray-100 rounded-lg`}
                  >
                    <TbReport
                      className={`${
                        isOpen === true ? "text-red-400" : "text-black text-sm"
                      }`}
                    />
                    <div className="relative inline-block text-sm">
                      <span className="items-center cursor-pointer hover:bg-gray-100 rounded-lg hidden sm:block ml-2">
                        Reports
                      </span>
                      {isOpen && (
                        <div className="absolute left-36 -mt-12 w-auto bg-white border border-gray-300 rounded-md shadow-lg z-50">
                          <ul className="grid grid-row-3 w-[200px] bg-red-500">
                            <li
                              className="relative hover:bg-gray-100 cursor-pointer"
                              onMouseEnter={() =>
                                handleMouseEnter("systemReports")
                              }
                              onMouseLeave={handleMouseLeave}
                            >
                              <Link
                                href="#"
                                className="block px-4 py-2 text-gray-800"
                              >
                                System Reports
                              </Link>
                              {openDropdown === "systemReports" && (
                                <ul className="absolute left-32 w-[200px] bg-white  rounded-md shadow-lg space-y-4 z-50">
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3  rounded hover:bg-gray-200"
                                    >
                                      Employee Update Reports
                                    </Link>
                                  </li>
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3 rounded hover:bg-gray-200"
                                    >
                                      Rental Invoice Reports
                                    </Link>
                                  </li>
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3 rounded hover:bg-gray-200"
                                    >
                                      Overdue Payment Reports
                                    </Link>
                                  </li>
                                </ul>
                              )}
                            </li>
                            <li
                              className="relative hover:bg-gray-100 cursor-pointer"
                              onMouseEnter={() =>
                                handleMouseEnter("vehicleReports")
                              }
                              onMouseLeave={handleMouseLeave}
                            >
                              <Link
                                href="#"
                                className="block px-4 py-2 text-gray-800"
                              >
                                Vehicle Reports
                              </Link>
                              {openDropdown === "vehicleReports" && (
                                <ul className="absolute left-32 -mt-5 w-[160px] bg-white rounded-md shadow-lg space-y-4  z-50">
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3 rounded hover:bg-gray-200"
                                    >
                                      Interim Test Expiry
                                    </Link>
                                  </li>
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3 rounded hover:bg-gray-200"
                                    >
                                      Mot Expiry
                                    </Link>
                                  </li>
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3 rounded hover:bg-gray-200"
                                    >
                                      Road Tax Expiry
                                    </Link>
                                  </li>
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-2 rounded hover:bg-gray-200"
                                    >
                                      Test Date Expiry
                                    </Link>
                                  </li>
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-2 rounded hover:bg-gray-200"
                                    >
                                      Plate Expiry
                                    </Link>
                                  </li>
                                </ul>
                              )}
                            </li>

                            <li
                              className="relative hover:bg-gray-100 cursor-pointer"
                              onMouseEnter={() =>
                                handleMouseEnter("driverReports")
                              }
                              onMouseLeave={handleMouseLeave}
                            >
                              <Link
                                href="#"
                                className="block px-4 py-2 text-gray-800"
                              >
                                Driver Reports
                              </Link>

                              {openDropdown === "driverReports" && (
                                <ul className="absolute left-32 -mt-5 w-[160px] bg-white rounded-md shadow-lg space-y-4 z-50">
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3 rounded hover:bg-gray-200"
                                    >
                                      Drivers Holidays
                                    </Link>
                                  </li>
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3 rounded hover:bg-gray-200"
                                    >
                                      Licence Expiry
                                    </Link>
                                  </li>
                                  <li>
                                    <Link
                                      href="#"
                                      className="px-4 py-3 rounded hover:bg-gray-200"
                                    >
                                      Taxi Badge Expiry
                                    </Link>
                                  </li>
                                </ul>
                              )}
                            </li>
                          </ul>
                        </div>
                      )}
                    </div>
                  </li>
                </div>
                <Link passHref href="#">
                  <li className="flex items-center p-3 cursor-pointer  rounded-lg">
                    <div className="flex items-center gap-3">
                      <MdFavorite className="text-black text-sm" />
                      <span className="hidden sm:block">Favourites</span>
                    </div>
                  </li>
                </Link>
              </>
            )}